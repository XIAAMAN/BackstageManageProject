<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" version="3.1">
  	<display-name>lims</display-name>
  	
  	<!-- 配置spring核心监听器，默认会以 /WEB-INF/applicationContext.xml作为配置文件 -->
  	<listener>
    	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  	</listener>
  	<!-- contextConfigLocation参数用来指定Spring的配置文件 -->
  	<context-param>
    	<param-name>contextConfigLocation</param-name>
    	<param-value>classpath:applicationContext.xml</param-value>
  	</context-param>
  	
  	<!-- 定义拦截器不拦截的文件类型 -->
 
  	<servlet-mapping>    
	    <servlet-name>default</servlet-name>    
	    <url-pattern>*.js</url-pattern>    
	    <url-pattern>*.css</url-pattern> 
	    <url-pattern>/bootstrap/*</url-pattern>
	    <url-pattern>/font/*</url-pattern>    
	    <url-pattern>/images/*</url-pattern>     
	</servlet-mapping>
  
  	
  	<!-- 定义Spring MVC的前端控制器 -->
  	<servlet>
    	<servlet-name>springmvc</servlet-name>
    	<servlet-class>
        	org.springframework.web.servlet.DispatcherServlet
    	</servlet-class>
    	<init-param>
      		<param-name>contextConfigLocation</param-name>
      		<param-value>classpath:springmvc-config.xml</param-value>
    	</init-param>
    	<load-on-startup>1</load-on-startup>
  	</servlet>
  	
  	<!-- 让Spring MVC的前端控制器拦截所有请求 -->
  	<servlet-mapping>
    	<servlet-name>springmvc</servlet-name>
    	<url-pattern>/</url-pattern>
  	</servlet-mapping>
  	
  	<!-- 编码过滤器 -->
  	<filter>
    	<filter-name>characterEncodingFilter</filter-name>
    	<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
	    <init-param>
	      	<param-name>encoding</param-name>
	      	<param-value>UTF-8</param-value>
	    </init-param>
  	</filter>
  	<filter-mapping>
    	<filter-name>characterEncodingFilter</filter-name>
   		<url-pattern>/*</url-pattern>
  	</filter-mapping>
  	
  	<!-- log4j配置 -->
  	<context-param>      
    	<param-name>log4jConfigLocation</param-name>      
    	<param-value>classpath:log4j.properties</param-value>      
  	</context-param>      
  	<context-param>      
    	<param-name>log4jRefreshInterval</param-name>      
    	<param-value>60000</param-value>      
  	</context-param>    
  	
  	 <!-- 跨域请求-->
  	<filter>
    	<filter-name>CorsFilter</filter-name>
    	<filter-class>org.apache.catalina.filters.CorsFilter</filter-class>
  	</filter>
  	<filter-mapping>
    	<filter-name>CorsFilter</filter-name>
    	<url-pattern>/*</url-pattern>
  	</filter-mapping>
  	
  	<!-- jsp的配置 -->
  	<jsp-config>
    <jsp-property-group>
    	<!-- 配置拦截所有的jsp页面  -->
      	<url-pattern>*.jsp</url-pattern>
       	<!-- 可以使用el表达式  -->
      	<el-ignored>false</el-ignored>
      	<!-- 给所有的jsp页面导入要依赖的库，tablib.jsp就是一个全局的标签库文件  -->
      	<include-prelude>/WEB-INF/jsp/taglib.jsp</include-prelude>
    	</jsp-property-group>
  	</jsp-config>
  
  	<welcome-file-list>
    	<welcome-file>index.jsp</welcome-file>
  	</welcome-file-list>
  	
</web-app>